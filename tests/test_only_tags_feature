#!/bin/bash


if ! [[ ${TESTDIR+x} ]]; then
  echo "ERROR: WRONG CONTEXT"
  exit 1
fi

# ---- TRAPS ---
SCRIPT_PATH=$(pwd)
TESTDIR_PATH=""

trap 'ExitHandler' EXIT
ExitHandler() {
  ${SHELL} ${SCRIPT_PATH}/comm_wait_umount ${TESTDIR_PATH}/only-tags-feature
}

# ------------------
# ------------------

echo -----
echo "TEST: only-tags feature test"

pushd ${TESTDIR} > /dev/null
TESTDIR_PATH=$(pwd)

# Root path of mount point
ROOT_PATH="${TESTDIR_PATH}/only-tags-feature"
mkdir ${ROOT_PATH}
sudo mount -t tagvfs ${TESTDIR_PATH}/only-tags-feature.tag ${ROOT_PATH}/

ONLY_TAGS_DIR=${RPATH}/only-tags

set +o errexit

if ! [[ -d asdfasdf ]]; then
  echo succ
fi

# Check tag creation
# -----
echo -- p1
mkdir "${TAGDIR}/tag1"
echo -- p2

set +o errexit
if [[ $(mkdir ${TAGDIR}/tag1 > /dev/null 2> /dev/null) ]]; then
  echo "ERROR: BASE FUNCTIONS: double creewtion of the same tag"
  exit 1
fi
set -o errexit

CheckTag1Exist


# Check filelink creation and exstance into no-tags
# -----
touch base_functions_001
ln -s --target-directory="${TAGDIR}" "${TPATH}/base_functions_001"

set +o errexit
if [[ $(ln -s --target-directory="${TAGDIR}" "${TPATH}/base_functions_001" > /dev/null 2> /dev/null) ]]; then
  echo "ERROR: BASE FUNCTIONS: double creation of the same symbol link"
  exit 1
fi
set -o errexit

CheckBF1NoTag1Exist

# stop, start, repeat checks
${SHELL} ${SCRIPT_PATH}/comm_wait_umount $(pwd)/base_functions/
sudo mount -t tagvfs $(pwd)/base_functions.tag $(pwd)/base_functions/

CheckTag1Exist
CheckBF1NoTag1Exist

cp -P "${TAGDIR}/base_functions_001" "${TAGDIR}/tag1"
CheckBF1Tag1Exist


${SHELL} ${SCRIPT_PATH}/comm_wait_umount ${TESTDIR}/only-tags-feature

popd > /dev/null

echo --- OK: only-tags feature ---
